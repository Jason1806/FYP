# -*- mode: python ; coding: utf-8 -*-
import os

block_cipher = None

# Add pyfiglet data files
pyfiglet_datas = []
try:
    import pyfiglet
    pyfiglet_path = os.path.dirname(pyfiglet.__file__)
    fonts_path = os.path.join(pyfiglet_path, 'fonts')
    if os.path.exists(fonts_path):
        pyfiglet_datas = [(fonts_path, 'pyfiglet/fonts')]
except ImportError:
    pass

a = Analysis(
    ['pentestool/main.py'],
    pathex=[],
    binaries=[],
    datas=pyfiglet_datas,
    hiddenimports=[
        'pentestool.core.scanner',
        'pentestool.core.webapp', 
        'pentestool.ai.analyzer',
        'pentestool.reports.generator',
        'pentestool.gui.main_window',
        'pentestool.utils.config',
        'click',
        'rich',
        'pyfiglet',
        'requests',
        'beautifulsoup4',
        'lxml',
        'scapy',
        'dnspython',
        'cryptography',
        'jinja2',
        'matplotlib',
        'numpy',
        'pandas',
        'scikit-learn',
        'nltk',
        'colorama',
        'tkinter',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='PenTestTool',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)